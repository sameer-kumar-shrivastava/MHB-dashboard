From ce4720735b5ee39b2902c645a91ec96f5be7a960 Mon Sep 17 00:00:00 2001
From: shardakumari505 <shardakumari505@gmail.com>
Date: Fri, 5 Jan 2024 18:41:59 +0530
Subject: [PATCH 5/5] resolved login issue

---
 src/contexts/auth-context.js      | 32 ++++++++++++++++---------------
 src/layouts/dashboard/side-nav.js |  4 ++++
 src/pages/_app.js                 | 15 ++++++++++-----
 3 files changed, 31 insertions(+), 20 deletions(-)

diff --git a/src/contexts/auth-context.js b/src/contexts/auth-context.js
index 8d78e17..b49a008 100644
--- a/src/contexts/auth-context.js
+++ b/src/contexts/auth-context.js
@@ -25,13 +25,13 @@ const handlers = {
       ...state,
       ...(user
         ? {
-            isAuthenticated: true,
-            isLoading: false,
-            user,
-          }
+          isAuthenticated: true,
+          isLoading: false,
+          user,
+        }
         : {
-            isLoading: false,
-          }),
+          isLoading: false,
+        }),
     };
   },
   [HANDLERS.SIGN_IN]: (state, action) => {
@@ -44,6 +44,7 @@ const handlers = {
     };
   },
   [HANDLERS.SIGN_OUT]: (state) => {
+    console.log("signing out working")
     return {
       ...state,
       isAuthenticated: false,
@@ -74,10 +75,8 @@ export const AuthProvider = (props) => {
 
     initialized.current = true;
 
-    let isAuthenticated = false;
-
     try {
-      isAuthenticated = window.sessionStorage.getItem('authenticated') === 'true';
+      const isAuthenticated = window.sessionStorage.getItem('authenticated') === 'true';
       console.log('Is Authenticated:', isAuthenticated);
     } catch (err) {
       console.error(err);
@@ -141,17 +140,17 @@ export const AuthProvider = (props) => {
         email,
         password,
       });
-  
+
       // Assuming your API response structure has a 'success' property
       if (response.data.success) {
         // You may need to adapt this based on the actual structure of your API response
         const user = response.data.data.AuthenticationResult;
-  
+
         dispatch({
           type: HANDLERS.SIGN_IN,
           payload: user,
         });
-  
+
         window.sessionStorage.setItem('authenticated', 'true');
       } else {
         // Handle unsuccessful login
@@ -163,7 +162,7 @@ export const AuthProvider = (props) => {
       throw new Error('An error occurred while processing your request.');
     }
   };
-  
+
 
   const signUp = async (email, name, password) => {
     // Implementation for sign-up can be added here if needed
@@ -171,8 +170,11 @@ export const AuthProvider = (props) => {
   };
 
   const signOut = () => {
+    localStorage.removeItem('idToken');
+    window.sessionStorage.clear();
     dispatch({
       type: HANDLERS.SIGN_OUT,
+      payload: null,
     });
     router.push('/auth/login')
   };
@@ -180,8 +182,8 @@ export const AuthProvider = (props) => {
   return (
     <AuthContext.Provider
       value={{
-        isAuthenticated,
-        user,
+        isAuthenticated: state.isAuthenticated,
+        user: state.user,
         skip,
         signIn,
         signUp,
diff --git a/src/layouts/dashboard/side-nav.js b/src/layouts/dashboard/side-nav.js
index aa72173..0580ea0 100644
--- a/src/layouts/dashboard/side-nav.js
+++ b/src/layouts/dashboard/side-nav.js
@@ -20,15 +20,19 @@ import { Scrollbar } from 'src/components/scrollbar';
 import { items } from './config';
 import { SideNavItem } from './side-nav-item';
 import { useAuth } from 'src/hooks/use-auth';
+import { useRouter } from 'next/router';
 
 export const SideNav = (props) => {
   const { open, onClose } = props;
   const pathname = usePathname();
   const lgUp = useMediaQuery((theme) => theme.breakpoints.up('lg'));
   const auth = useAuth();
+  const router = useRouter();
 
   const handleLogout = () => {
+    console.log('Logging out...');
     auth.signOut();
+    // router.push('/auth/login');
   };
 
   const content = (
diff --git a/src/pages/_app.js b/src/pages/_app.js
index 288a101..046fe3b 100644
--- a/src/pages/_app.js
+++ b/src/pages/_app.js
@@ -9,6 +9,7 @@ import { useNProgress } from 'src/hooks/use-nprogress';
 import { createTheme } from 'src/theme';
 import { createEmotionCache } from 'src/utils/create-emotion-cache';
 import 'simplebar-react/dist/simplebar.min.css';
+import Page from './auth/login';
 
 
 const clientSideEmotionCache = createEmotionCache();
@@ -40,11 +41,15 @@ const App = (props) => {
           <ThemeProvider theme={theme} >
             <CssBaseline />
             <AuthConsumer>
-              {
-                (auth) => auth.isLoading
-                  ? <SplashScreen />
-                  : getLayout(<Component {...pageProps} />)
-              }
+              {(auth) => {
+                if (auth.isLoading) {
+                  return <SplashScreen />;
+                }
+                if (!auth.isAuthenticated) {
+                  return getLayout(<Page />);
+                }
+                return getLayout(<Component {...pageProps} />);
+              }}
             </AuthConsumer>
           </ThemeProvider>
         </AuthProvider>
-- 
2.42.0.windows.2

